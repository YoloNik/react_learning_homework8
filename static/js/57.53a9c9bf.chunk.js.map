{"version":3,"file":"static/js/57.53a9c9bf.chunk.js","mappings":"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","sources":["webpack://react_learning_homework8/./src/components/Phonebook/UserInput/UserInput.module.scss?e5b8","components/common/RegBtn/RegBtn.jsx","components/Phonebook/UserInput/UserInput.jsx","components/Phonebook/FilterPhonebook/FilterPhonebook.jsx","webpack://react_learning_homework8/./src/components/Phonebook/ContactList/ContactList.module.scss?fdbd","redux/contacts/contactsSelector.js","components/common/Modal/Modal.jsx","components/Phonebook/ContactList/ContactList.jsx","webpack://react_learning_homework8/./src/components/Phonebook/Phonebook.module.scss?b1f8","components/Phonebook/Phonebook.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"UserInput_formWrapper__il-PQ\",\"userInput\":\"UserInput_userInput__sFOde\"};","import React from 'react';\nimport './RegBtn.css';\n\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\n\nfunction RegBtn({ handleClick, type, name, children, className }) {\n  return (\n    <button name={name} onClick={handleClick} type={type} className={className}>\n      {children}\n    </button>\n  );\n}\n\nexport default memo(RegBtn);\n\nRegBtn.propTypes = {\n  title: PropTypes.string,\n  name: PropTypes.string,\n  handleClick: PropTypes.func,\n};\n","import React from 'react';\nimport s from './UserInput.module.scss';\nimport RegBtn from 'components/common/RegBtn/RegBtn';\nimport PropTypes from 'prop-types';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nfunction UserInput({ onChange, addContact, valueName, valueTel, titel }) {\n  return (\n    <form className={s.formWrapper}>\n      <input\n        className={s.userInput}\n        placeholder=\"Name\"\n        type=\"text\"\n        value={valueName}\n        name=\"name\"\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <input\n        className={s.userInput}\n        onChange={onChange}\n        placeholder=\"Phone\"\n        value={valueTel}\n        type=\"tel\"\n        name=\"phone\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      {valueName && valueTel ? (\n        <RegBtn handleClick={addContact} className=\"addContact\" type=\"submit\">\n          <AiOutlineUserAdd /> {titel}\n        </RegBtn>\n      ) : (\n        <p>Add contact details to add it to the contact list</p>\n      )}\n    </form>\n  );\n}\n\nexport default UserInput;\n\nUserInput.prototype = {\n  onChange: PropTypes.func.isRequired,\n  addContact: PropTypes.func.isRequired,\n  valueName: PropTypes.string.isRequired,\n  valueTel: PropTypes.string.isRequired,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../UserInput/UserInput.module.scss';\n\n//const style = {\n//  width: '70%',\n//  height: '30px',\n//  border: '1px',\n//  borderRadius: '16px',\n//  backgroundColor: '#E8EDE7',\n//\tpaddingLeft: '10px',\n//\t:active,\n//\t:hover,\n//\t:focus {\n//\t\toutline: 3px solid #f0bb29;\n//};\n\nfunction FilterPhonebook({ filterValue, onChange }) {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <form>\n        <input\n          className={styles.userInput}\n          placeholder=\"Search contact\"\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={onChange}\n        />\n      </form>\n    </>\n  );\n}\n\nexport default memo(FilterPhonebook);\n\nFilterPhonebook.prototype = {\n  filterValue: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__6i5pP\",\"contactItem\":\"ContactList_contactItem__l+IPj\",\"button\":\"ContactList_button__zafWS\",\"buttonUpdate\":\"ContactList_buttonUpdate__u5aBc\",\"user\":\"ContactList_user__xnNXh\"};","const getFilter = state => state.phonebook.contacts.filter;\nconst getContacts = state => state.phonebook.contacts.data.items;\nconst getLoading = state => state.phonebook.contacts.data.loading;\n\nexport { getFilter, getContacts, getLoading };\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport * as contactsSelector from 'redux/contacts/contactsSelector';\nimport { patchContact } from 'redux/contacts/contactsOperation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nfunction UpdateModal(props) {\n  const [newUser, setNewUser] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const contact = useSelector(contactsSelector.getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    switch (e.target.id) {\n      case 'formBasicName':\n        setNewUser(e.target.value);\n        break;\n      case 'formBasicPhone':\n        setNewPhone(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const updateContact = e => {\n    e.preventDefault();\n\n    const user = {\n      name: newUser,\n      number: newPhone,\n    };\n\n    const userParams = { userId: props.id, newContsct: user };\n\n    const searchSameName = contact.map(cont => cont.name).includes(user.name);\n    if (searchSameName) {\n      toast(`Person: \"${user.name}\" is already in contacts`);\n    } else {\n      dispatch(patchContact(userParams));\n      props.onHide();\n    }\n  };\n  return (\n    <div>\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Update contact\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n              <Form.Label>\n                <h5>Name :{props.name}</h5>\n              </Form.Label>\n              <br></br>\n              <Form.Label>New name :{newUser}</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                onChange={handleChange}\n                value={newUser}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n              <Form.Label>\n                <h5>Number: {props.phone}</h5>\n              </Form.Label>\n              <br></br>\n              <Form.Label>New number :{newPhone}</Form.Label>\n              <Form.Control\n                type=\"phone\"\n                placeholder=\"Enter phone\"\n                onChange={handleChange}\n                value={newPhone}\n              />\n            </Form.Group>\n\n            <Button\n              style={{ backgroundColor: '#f0bb29', borderColor: '#c17900' }}\n              variant=\"primary\"\n              type=\"button\"\n              onClick={updateContact}\n            >\n              Submit\n            </Button>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ backgroundColor: '#f0bb29', borderColor: '#c17900' }}\n            onClick={props.onHide}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default UpdateModal;\n","import { useState } from 'react';\nimport styles from './ContactList.module.scss';\nimport { AiOutlineUserDelete } from 'react-icons/ai';\nimport { RiContactsLine } from 'react-icons/ri';\nimport PropTypes from 'prop-types';\nimport UpdateModal from 'components/common/Modal/Modal';\n\nContactList.prototype = {\n  filter: PropTypes.string,\n  filterByName: PropTypes.string,\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nfunction ContactList({ filter, contacts, filterByName, removeContact }) {\n  const [modalShow, setModalShow] = useState(false);\n  const [idforModal, setIdforModal] = useState('');\n\n  const openModal = e => {\n    setIdforModal(e.target.name);\n    setModalShow(true);\n  };\n\n  return (\n    <div className={styles.test}>\n      <ul className={styles.contactList}>\n        {(filter &&\n          filterByName().map(el => {\n            return (\n              <li className={styles.contactItem} key={el.id}>\n                {el.id === idforModal && (\n                  <UpdateModal\n                    name={el.name}\n                    phone={el.number}\n                    id={idforModal}\n                    show={modalShow}\n                    onHide={() => setModalShow(false)}\n                  />\n                )}\n                <p className={styles.user}>\n                  {el.name}: {el.number}\n                </p>\n                <div>\n                  <button\n                    name={el.id}\n                    onClick={openModal}\n                    className={styles.buttonUpdate}\n                    type=\"button\"\n                  >\n                    <RiContactsLine /> Update\n                  </button>\n                  <button\n                    name={el.id}\n                    onClick={removeContact}\n                    className={styles.button}\n                    type=\"button\"\n                  >\n                    <AiOutlineUserDelete /> Delete\n                  </button>\n                </div>\n              </li>\n            );\n          })) ||\n          contacts.map(el => {\n            return (\n              <li className={styles.contactItem} key={el.id}>\n                <div>\n                  {el.id === idforModal && (\n                    <UpdateModal\n                      name={el.name}\n                      phone={el.number}\n                      id={idforModal}\n                      show={modalShow}\n                      onHide={() => setModalShow(false)}\n                    />\n                  )}\n                  <p className={styles.user}>\n                    {el.name}: {el.number}\n                  </p>\n                </div>\n                <div>\n                  <button\n                    name={el.id}\n                    onClick={openModal}\n                    className={styles.buttonUpdate}\n                    type=\"button\"\n                  >\n                    <RiContactsLine /> Update\n                  </button>\n                  <button\n                    name={el.id}\n                    onClick={removeContact}\n                    className={styles.button}\n                    type=\"button\"\n                  >\n                    <AiOutlineUserDelete /> Delete\n                  </button>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__uzxkM\",\"title\":\"Phonebook_title__mhwvS\",\"contactsTitle\":\"Phonebook_contactsTitle__nW60w\",\"listWraper\":\"Phonebook_listWraper__US9CM\"};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInput from './UserInput/UserInput';\nimport FilterPhonebook from './FilterPhonebook/FilterPhonebook';\nimport ContactList from './ContactList/ContactList';\nimport { filterChange } from 'redux/contacts/contactsSlice';\nimport {\n  getContacts,\n  postContact,\n  deleteContact,\n} from 'redux/contacts/contactsOperation';\nimport styles from './Phonebook.module.scss';\nimport * as contactsSelector from 'redux/contacts/contactsSelector';\nimport * as authSelector from 'redux/auth/authSelector';\nimport { Radio } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\n//import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Phonebook = () => {\n  const [user, setUser] = useState('');\n  const [phone, setPhone] = useState('');\n  const filter = useSelector(contactsSelector.getFilter);\n  const contacts = useSelector(contactsSelector.getContacts);\n  const loading = useSelector(contactsSelector.getLoading);\n  const userOnline = useSelector(authSelector.isUserLogin);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userOnline) dispatch(getContacts());\n  }, [dispatch, userOnline]);\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setUser(e.target.value);\n        break;\n      case 'phone':\n        setPhone(e.target.value);\n        break;\n      case 'filter':\n        dispatch(filterChange(e.target.value));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addContact = e => {\n    const newContact = {\n      name: user,\n      number: phone,\n    };\n    const searchSameName = contacts.map(cont => cont.name).includes(user);\n    searchSameName\n      ? toast(`Person: \"${user}\" is already in contacts`)\n      : dispatch(postContact(newContact));\n    reset();\n  };\n\n  const removeContact = e => {\n    dispatch(deleteContact(e.target.name));\n    dispatch(getContacts());\n  };\n\n  const reset = () => {\n    setUser('');\n    setPhone('');\n  };\n\n  const filterByName = () => {\n    return contacts.filter(el =>\n      el.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  };\n\n  return (\n    <div className={styles.phonebook}>\n      <h2 className={styles.title}>Phonebook</h2>\n      <UserInput\n        titel={'Add contact'}\n        valueName={user}\n        valueTel={phone}\n        onChange={handleChange}\n        addContact={addContact}\n      />\n      <div className={styles.listWraper}>\n        <div className={styles.contactsTitle}>\n          {loading ? (\n            <>\n              <p>We are processing your request, please wait...</p>\n              <Radio\n                colors={['#223f4a', '#f0bb29', '#c17900']}\n                visible={true}\n                height=\"30\"\n                width=\"30\"\n                ariaLabel=\"radio-loading\"\n                wrapperStyle={{ width: '20%' }}\n                wrapperClass=\"radio-wrapper\"\n              />\n            </>\n          ) : (\n            <p>Сontacts:</p>\n          )}\n        </div>\n\n        <FilterPhonebook filterValue={filter} onChange={handleChange} />\n        <ContactList\n          filter={filter}\n          contacts={contacts}\n          filterByName={filterByName}\n          removeContact={removeContact}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/Phonebook/Phonebook';\n\nimport React from 'react';\n\nfunction Contacts() {\n  return <Phonebook />;\n}\nexport default Contacts;\n"],"names":["RegBtn","handleClick","type","name","children","className","onClick","memo","UserInput","onChange","addContact","valueName","valueTel","titel","s","placeholder","value","pattern","title","required","FilterPhonebook","filterValue","styles","prototype","PropTypes","getFilter","state","phonebook","contacts","filter","getContacts","data","items","getLoading","loading","props","useState","newUser","setNewUser","newPhone","setNewPhone","contact","useSelector","contactsSelector","dispatch","useDispatch","handleChange","e","target","id","Modal","size","centered","closeButton","Form","controlId","phone","Button","style","backgroundColor","borderColor","variant","preventDefault","user","number","userParams","userId","newContsct","map","cont","includes","toast","patchContact","onHide","ContactList","filterByName","removeContact","modalShow","setModalShow","idforModal","setIdforModal","openModal","el","show","deleteContact","setUser","setPhone","userOnline","authSelector","useEffect","filterChange","reset","newContact","postContact","colors","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","toLocaleLowerCase"],"sourceRoot":""}